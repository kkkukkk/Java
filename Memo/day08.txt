메소드 정의
	public static 리턴타입 메소드명(){
		코드;
	}

매개변수
	메소드를 사용하는 사람으로부터 값을 전달받아서
	메소드 안에서 사용한다.

return
	메소드 사용 결과를 값으로 되돌려줄 때 사용한다.

	return 타입이 있다면 해당 메소드 사용 결과를
	return된 값으로 생각하고 사용한다

변수의 생명주기
	변수를 언제부터 언제까지 사용할 수 있을까??


지역변수
	지역에서만 사용 가능한 변수
	메소드나 특정 {}안에서 선언된 변수
전역변수
	전체 영역에서 사용가능한 변수

메소드 오버로딩(overloading)
	메소드의 이름은 같지만 매개변수의 갯수나
	타입이 다르게 선언된 것
	(매개변수 이름, 리턴타입과는 무관)
	다형성을 구현하는 요소 중 하나이다

객체 지향 언어 4특징
	1. 다형성(polymorphism)
		하나의 클래스나 하나의 함수가
		다양한 방식으로 동작을 가능한 것을 의미한다.
		자바의 다형성을 구현하는 방법 중
		하나로 오버로딩이 있다.
	2. 캡슐화(encapsulation)

	3. 추상화
	4. 상속


--------------------------------------------------------------------------------
값을 재사용하기 위해서 --> 변수
코드를 재사용하기 위해서 --> 메소드
변수도 재사용하고, 메소드도 재사용하고 싶다면??

클래스(class)
	사용자가 만드는 새로운 유형의 타입이다.
클래스 정의
	class 클래스 {
		멤버변수;
		메소드;
	}
생성자
	클래스명()
	객체를 생성할 때 사용한다
new
	heap메모리에 할당시키는 연산자

클래스 객체화
	클래스명 객체명 = new  클래스명();

. 하위연산자
	인스턴스 안에 있는 멤버들에 접근할 때 사용한다

this 
	자기 자신 객체(인스턴스)를 의미한다

멤버
	멤버변수
		인스턴스변수
	멤버함수 == 메소드





	