제어문
	조건문
		if문
		switch문
	반복문
		for문
		while문
		do~while문
-------------------------------------------------------------------------------------------
switch 문
	switch(변수명){
	case 값1:
		변수==값1일때실행되는영역;
		break;
	case 값2:
		변수==값2일때실행되는영역;
		break;
	....
	default:
		위의모든조건을만족하지않을때실행되는영역;
		//break;
	}

break
	switch문 안에서 break가 사용되면 아래로 흘러내려가지 않고
	즉시 switch문 바깥으로 이동한다

if vs switch
	모든 switch문은 if문으로 바꿀 수 있다
	하지만 모든 if문을 switch문으로 바꿀 수는 없다
	(==으로만 비교하기 때문에)
--------------------------------------------------------------------------------------------
for문
	for(초기식; 조건식; 증감식){
		반복할문장;
	}

	최초로  for문을 만나면 초기식으로 이동하여 변수에 값을 대입한다
	조건식을 확인하여 조건식이 
	1. true라면 for문 안으로 들어오고,
		for문 닫는 중괄호를 만나면 증감식으로 이동한다
		조건식으로 이동하여 조건식이 참이면 해당 과정을 반복한다
		조건식이 거짓이면 for문 안으로 들어오지 않는다
	2. false라면 for문 안으로 들어오지 않는다

continue
	반복문 안에서 사용되며, 자신을 감싸는 가장 가까운 반복문의 
	즉시 다음 반복을 실행한다


복합 대입 연산자
	num += 값 ---> num = num + 값;
	num -= 값; ---> num = num - 값;
	num *= 값; ---> num = num * 값;
	num /= 값; ---> num = num / 값;
	num %= 값; ---> num = num % 값;

증감 연산자
	후위형 : 우선순위가 매우 낮다(대입연산자보다 낮음)
	num++ ---> num += 1 ---> num = num + 1
	num-- ---> num -= 1 ---> num = num - 1

	전위형 : 우선순위가 매우 빠르다
	++num
	--num
---------------------------------------------------------------------------------
이중 for문
	for문 안에 for문이 존재하는 형태